<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontMagentoPaymentsPayLaterMessageChangesSimpleProductTest">
        <annotations>
            <features value="MagentoPaymentsPayPalSmartButtons"/>
            <stories value="Pay Later message changes when price of the product change"/>
            <title value="Pay Later message changes when QTY change on the simple product page"/>
            <description value="Users can update QTY and see different Pay Later message on the simple product page"/>
            <severity value="CRITICAL"/>
            <testCaseId value="pay-later-message-simple-product"/>
            <group value="magento-payments"/>
            <skip>
                <issueId value="PayPal Later message unstable"/>
            </skip>
        </annotations>
        <before>
            <magentoCLI command="config:set {{EnableFreeShippingConfigData.path}} {{EnableFreeShippingConfigData.value}}" stepKey="enableFreeShipping"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="login"/>
            <actionGroup ref="AdminConfigurePaymentMethodActionGroup" stepKey="configurePaymentMethod">
                <argument name="methodName" value="payment_services_paypal_smart_buttons"/>
                <argument name="methodAction" value="authorize_capture"/>
            </actionGroup>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
        </before>
        <after>
            <magentoCLI command="config:set {{DisableFreeShippingMethod.path}} {{DisableFreeShippingMethod.value}}" stepKey="disableFreeShipping"/>
            <actionGroup ref="AdminDisablePaymentMethodActionGroup" stepKey="disablePaymentMethod">
                <argument name="methodName" value="payment_services_paypal_smart_buttons"/>
            </actionGroup>
            <deleteData stepKey="deleteCategory" createDataKey="createCategory"/>
            <deleteData stepKey="deleteProduct" createDataKey="createProduct"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdmin"/>
        </after>
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="navigateToProductPage">
            <argument name="productUrl" value="$createProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <actionGroup ref="StorefrontGrabPayLaterMessageTextActionGroup" stepKey="getPayLaterMessageBefore">
            <argument name="selector" value="{{SmartButtonsProductSection.MessageIframe}}"/>
        </actionGroup>
        <fillField selector="{{StorefrontProductInfoMainSection.qty}}" userInput="100" stepKey="changeQty"/>
        <wait time="2" stepKey="waitForPayLaterMessageReady"/>
        <actionGroup ref="StorefrontGrabPayLaterMessageTextActionGroup" stepKey="getPayLaterMessageAfter">
            <argument name="selector" value="{{SmartButtonsProductSection.MessageIframe}}"/>
        </actionGroup>
        <assertNotEquals stepKey="assertNotEquals">
            <actualResult type="string">{getPayLaterMessageAfter}</actualResult>
            <expectedResult type="string">{getPayLaterMessageBefore}</expectedResult>
        </assertNotEquals>
    </test>
</tests>
